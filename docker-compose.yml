version: '3'

services:

  nginx:
    build: ./nginx
    restart: unless-stopped
    environment:
      - DOMAIN
      - EMAIL
    ports:
      - "80:80"
      - "443:443"
    links:
      - "web:web"
    volumes:
      - "web-static:/usr/src/app/static"
      - ./data/certbot/conf:/etc/letsencrypt:ro
      - ./data/certbot/www:/var/www/certbot:ro # mounting the folder to the nginx container
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  web:
    build: ./web
    expose:
      - 8000
    links:
      - "redis:redis"
      - "postgres:postgres"
    volumes:
      - web-static:/usr/src/app/static
    env_file: .env
    command: bash -c "
      python manage.py collectstatic --noinput --clear &&
      daphne -b 0.0.0.0 -p 8000 quizbowl.asgi:application"
    depends_on:
      - redis
      - postgres
      - nginx

  redis:
    image: redis:latest
    expose:
      - 6379
    volumes:
      - "redisdata:/data"

  postgres:
    image: postgres:latest
    expose:
      - 5432
    env_file: .env
    environment: 
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - pgdata:/var/lib/postgresql/data/
  
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    environment:
      - EMAIL
      - DOMAIN
    restart: unless-stopped
    depends_on:
      - nginx
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email ${EMAIL} --agree-tos --no-eff-email
             -d ${DOMAIN}
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  web-static:
  redisdata:
  pgdata: